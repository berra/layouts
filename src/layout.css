:root {
  --measure: 60ch;
  --background-color: Canvas;
  --text-color: CanvasText;
  --ratio: 1.5;
  --s-5: calc(var(--s-4) / var(--ratio));
  --s-4: calc(var(--s-3) / var(--ratio));
  --s-3: calc(var(--s-2) / var(--ratio));
  --s-2: calc(var(--s-1) / var(--ratio));
  --s-1: calc(var(--s0) / var(--ratio));
  --s0: 1rem;
  --s1: calc(var(--s0) * var(--ratio));
  --s2: calc(var(--s1) * var(--ratio));
  --s3: calc(var(--s2) * var(--ratio));
  --s4: calc(var(--s3) * var(--ratio));
  --s5: calc(var(--s4) * var(--ratio));
  --border-none: 0;
  --border-thin: 1px;
  --border-thick: 8px;
}

* {
  max-inline-size: var(--measure);
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica,
    Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
}

:where(html, body, div, header, nav, main, footer) {
  max-inline-size: none;
}

body {
  /* background-color: var(--background);
  color: var(--text-color); */
  line-height: var(--ratio);
}

/* stack */

:where(.stack) {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
}

:where(.stack > *) {
  margin-block: 0;
}

:where(.stack > * + *) {
  margin-block-start: var(--space, 1.5rem);
}

:where(.stack:only-child) {
  block-size: 100%;
}

:where(.stack.break-first > :nth-child(1)) {
  margin-block-end: auto;
}

:where(.stack.break-second > :nth-child(2)) {
  margin-block-end: auto;
}

:where(.stack.break-third > :nth-child(3)) {
  margin-block-end: auto;
}

/* Box */

:where(.box) {
  padding: var(--space, --s1);
  border: var(--border-none, 0) solid;
  --color-light: var(--background-color);
  --color-dark: var(--text-color);
  /* color: var(--color-dark);
  background-color: var(--color-light); */
}

:where(.box *) {
  color: inherit;
}

:where(.box.invert) {
  color: var(--color-light);
  background-color: var(--color-dark);
}

/* center */

:where(.center) {
  box-sizing: content-box;
  margin-inline: auto;
  max-inline-size: var(--measure);
}

/* cluster */

:where(.cluster) {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space, 1rem);
  justify-content: flex-start;
  align-items: center;
}

/* sidebar */

:where(.with-sidebar) {
  display: flex;
  flex-wrap: wrap;
  gap: var(--s1);
}

:where(.with-sidebar > :first-child) {
  flex-grow: 1;
  flex-basis: var(--size, "auto");
}

:where(.with-sidebar > :last-child) {
  flex-basis: 0;
  flex-grow: 999;
  min-inline-size: 70%;
}
